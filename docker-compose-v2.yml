services:
  db:
    image: mysql:8.0
    container_name: springboot_mtg_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", ]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 30s
    networks:
      - springboot_network

  app:
    image: pcalvo/springboot-mtg-app:latest
    build:
      context: .
      dockerfile: Dockerfile-v2
    container_name: springboot_mtg_app
    environment:
      MYSQL_DATABASE: mtgbackend
      DB_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}?createDatabaseIfNotExist=true
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      SERVER_PORT: 8080
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      EMAIL: ${EMAIL}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
    - springboot_network

volumes:
  mysql_data:

networks:
  springboot_network:
    driver: bridge